generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Course {
  id          String   @id @default(uuid())
  userId      String
  title       String
  description String?
  imageUrl    String?
  price       Decimal? @db.Decimal(10, 2) // Changed from Float to Decimal for monetary values
  isPublished Boolean  @default(false)
  author      String

  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  chapters  Chapter[]
  purchases Purchase[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@index([title])
  @@index([userId]) // Added index for userId as it's likely to be queried often
}

model Category {
  id      String   @id @default(uuid())
  name    String   @unique
  courses Course[]

  createdAt DateTime @default(now()) // Added timestamps
  updatedAt DateTime @updatedAt
}

model Chapter {
  id          String   @id @default(uuid())
  title       String
  description String?
  videoUrl    String?
  position    Int
  isPublished Boolean  @default(false)
  isFree      Boolean  @default(false)

  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  userProgress UserProgress[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
  @@unique([courseId, position]) // Added unique constraint for position within a course
}
